Algorithm,Description,tn
auto,KNN con 2 vecinos peso: uniform metrica: minkowski,6
auto,KNN con 4 vecinos peso: uniform metrica: minkowski,6
auto,KNN con 6 vecinos peso: uniform metrica: minkowski,6
auto,KNN con 8 vecinos peso: uniform metrica: minkowski,6
auto,KNN con 2 vecinos peso: uniform metrica: euclidean,6
auto,KNN con 4 vecinos peso: uniform metrica: euclidean,6
auto,KNN con 6 vecinos peso: uniform metrica: euclidean,6
auto,KNN con 8 vecinos peso: uniform metrica: euclidean,6
auto,KNN con 5 vecinos peso: distance metrica: minkowski,6
auto,KNN con 5 vecinos peso: distance metrica: euclidean,6
ball_tree,KNN con 2 vecinos peso: uniform metrica: minkowski,6
ball_tree,KNN con 4 vecinos peso: uniform metrica: minkowski,6
ball_tree,KNN con 6 vecinos peso: uniform metrica: minkowski,6
ball_tree,KNN con 8 vecinos peso: uniform metrica: minkowski,6
ball_tree,KNN con 2 vecinos peso: uniform metrica: euclidean,6
ball_tree,KNN con 4 vecinos peso: uniform metrica: euclidean,6
ball_tree,KNN con 6 vecinos peso: uniform metrica: euclidean,6
ball_tree,KNN con 8 vecinos peso: uniform metrica: euclidean,6
ball_tree,KNN con 5 vecinos peso: distance metrica: minkowski,6
ball_tree,KNN con 5 vecinos peso: distance metrica: euclidean,6
kd_tree,KNN con 2 vecinos peso: uniform metrica: minkowski,6
kd_tree,KNN con 4 vecinos peso: uniform metrica: minkowski,6
kd_tree,KNN con 6 vecinos peso: uniform metrica: minkowski,6
kd_tree,KNN con 8 vecinos peso: uniform metrica: minkowski,6
kd_tree,KNN con 2 vecinos peso: uniform metrica: euclidean,6
kd_tree,KNN con 4 vecinos peso: uniform metrica: euclidean,6
kd_tree,KNN con 6 vecinos peso: uniform metrica: euclidean,6
kd_tree,KNN con 8 vecinos peso: uniform metrica: euclidean,6
kd_tree,KNN con 5 vecinos peso: distance metrica: minkowski,6
kd_tree,KNN con 5 vecinos peso: distance metrica: euclidean,6
brute,KNN con 2 vecinos peso: uniform metrica: minkowski,6
brute,KNN con 4 vecinos peso: uniform metrica: minkowski,6
brute,KNN con 6 vecinos peso: uniform metrica: minkowski,6
brute,KNN con 8 vecinos peso: uniform metrica: minkowski,6
brute,KNN con 2 vecinos peso: uniform metrica: euclidean,6
brute,KNN con 4 vecinos peso: uniform metrica: euclidean,6
brute,KNN con 6 vecinos peso: uniform metrica: euclidean,6
brute,KNN con 8 vecinos peso: uniform metrica: euclidean,6
brute,KNN con 5 vecinos peso: distance metrica: minkowski,6
brute,KNN con 5 vecinos peso: distance metrica: euclidean,6
sigmoid,nuSVC,6
gini,"RandomForest, n_estimators: 50",6
entropy,"RandomForest, n_estimators: 50",6
MLP,"MLPClassifier, activation: logistic, solver: sgd, learning_rate: constant, capas: 15-5-5",6
MLP,"MLPClassifier, activation: logistic, solver: sgd, learning_rate: invscaling, capas: 5-5-15",6
MLP,"MLPClassifier, activation: logistic, solver: sgd, learning_rate: invscaling, capas: 15-5-15",6
MLP,"MLPClassifier, activation: logistic, solver: sgd, learning_rate: invscaling, capas: 15-10-5",6
MLP,"MLPClassifier, activation: logistic, solver: sgd, learning_rate: invscaling, capas: 15-15-10",6
MLP,"MLPClassifier, activation: tanh, solver: lbfgs, learning_rate: constant, capas: 10-5-10",6
MLP,"MLPClassifier, activation: tanh, solver: sgd, learning_rate: invscaling, capas: 5-15-15",6
MLP,"MLPClassifier, activation: tanh, solver: sgd, learning_rate: invscaling, capas: 10-10-10",6
MLP,"MLPClassifier, activation: tanh, solver: sgd, learning_rate: invscaling, capas: 10-15-10",6
MLP,"MLPClassifier, activation: relu, solver: lbfgs, learning_rate: constant, capas: 5-5-10",6
MLP,"MLPClassifier, activation: relu, solver: sgd, learning_rate: invscaling, capas: 5-10-10",6
MLP,"MLPClassifier, activation: relu, solver: sgd, learning_rate: invscaling, capas: 5-15-5",6
MLP,"MLPClassifier, activation: relu, solver: sgd, learning_rate: invscaling, capas: 5-15-15",6
MLP,"MLPClassifier, activation: relu, solver: sgd, learning_rate: invscaling, capas: 10-5-15",6
MLP,"MLPClassifier, activation: relu, solver: sgd, learning_rate: invscaling, capas: 10-10-10",6
MLP,"MLPClassifier, activation: relu, solver: sgd, learning_rate: invscaling, capas: 10-15-10",6
MLP,"MLPClassifier, activation: relu, solver: sgd, learning_rate: adaptive, capas: 15-15-10",6

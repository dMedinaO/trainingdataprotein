Algorithm,Description,precision
auto,KNN con 6 vecinos peso: distance metrica: minkowski,0.666666666667
auto,KNN con 6 vecinos peso: distance metrica: euclidean,0.666666666667
ball_tree,KNN con 6 vecinos peso: distance metrica: minkowski,0.666666666667
ball_tree,KNN con 6 vecinos peso: distance metrica: euclidean,0.666666666667
kd_tree,KNN con 6 vecinos peso: distance metrica: minkowski,0.666666666667
kd_tree,KNN con 6 vecinos peso: distance metrica: euclidean,0.666666666667
brute,KNN con 6 vecinos peso: distance metrica: minkowski,0.666666666667
brute,KNN con 6 vecinos peso: distance metrica: euclidean,0.666666666667
MLP,"MLPClassifier, activation: identity, solver: sgd, learning_rate: constant, capas: 10-15-10",0.666666666667
MLP,"MLPClassifier, activation: identity, solver: sgd, learning_rate: constant, capas: 15-10-10",0.666666666667
MLP,"MLPClassifier, activation: identity, solver: sgd, learning_rate: constant, capas: 15-10-15",0.666666666667
MLP,"MLPClassifier, activation: identity, solver: sgd, learning_rate: adaptive, capas: 5-5-15",0.666666666667
MLP,"MLPClassifier, activation: identity, solver: sgd, learning_rate: adaptive, capas: 15-10-15",0.666666666667
MLP,"MLPClassifier, activation: logistic, solver: lbfgs, learning_rate: invscaling, capas: 10-10-5",0.666666666667
MLP,"MLPClassifier, activation: tanh, solver: sgd, learning_rate: constant, capas: 10-10-15",0.666666666667
MLP,"MLPClassifier, activation: relu, solver: lbfgs, learning_rate: invscaling, capas: 5-10-5",0.666666666667
MLP,"MLPClassifier, activation: relu, solver: sgd, learning_rate: adaptive, capas: 10-10-5",0.666666666667
MLP,"MLPClassifier, activation: relu, solver: adam, learning_rate: constant, capas: 5-5-10",0.666666666667
MLP,"MLPClassifier, activation: relu, solver: adam, learning_rate: invscaling, capas: 10-5-5",0.666666666667
